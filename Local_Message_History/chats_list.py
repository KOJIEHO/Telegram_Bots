# from pyrogram import Client
# import configparser
# import sys
# sys.path.append("PLIB")


# config = configparser.ConfigParser()
# config.read("settings.ini")

# api_hash = config["CONFIG"]["api_hash"]
# api_id = config["CONFIG"]["api_id"]


# # 3-–π –°–ø—Ä–∏–Ω—Ç
# # 1) –°–¥–µ–ª–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é py, –Ω–∞—á–∏—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø,—á–∞—Ç–æ–≤ –≤ txt —Ñ–∞–π–ª  (Id <tab> –Ω–∞–∑–≤–∞–Ω–∏–µ <tab> —Ç–∏–ø(—á–∞—Ç,–≥—Ä—É–ø–ø–∞, –∫–∞–Ω–∞–ª,—Å—É–ø–µ—Ä-–≥—Ä—É–ø–ø–∞, –∏–∑–±—Ä–∞–Ω–æ–µ))


# with Client(name="my_account", api_hash=api_hash, api_id=api_id) as app:
#     count = 1
#     file = open('chats_list.txt', 'w', encoding="utf-8")
#     for dialog in app.get_dialogs():
#         chat_info = dialog.chat
#         file.write(f"{count}. {chat_info.id}      {chat_info.title if chat_info.title else chat_info.first_name}      {chat_info.type}\n")
#         print(f"{count}. {chat_info.id}      {chat_info.title if chat_info.title else chat_info.first_name}      {chat_info.type}\n")
#     file.close()






import re

from datetime import datetime

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, FSInputFile

from keyboards.user import (
    kb_yn, kb_2, kb_3, kb_4,
    kb_back, kb_check_data,
    kb_approval, kb_phone_number)
from states.user import Form
from services.service import Service
from handlers.manager import start_mailing_to_managers


user_router = Router()


@user_router.message(F.text, Form.name)
async def state_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_phone_number)
    await state.set_state(Form.phone_number)


@user_router.message(F.text, Form.phone_number)
async def state_region(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:', reply_markup=ReplyKeyboardRemove())
        await state.set_state(Form.name)
    else:
        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
             await state.update_data(phone_number="–ù–µ —É–∫–∞–∑–∞–Ω")
        else:
            await state.update_data(phone_number=message.text)
        await message.answer('–†–µ–≥–∏–æ–Ω, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç)', reply_markup=kb_back)
        await state.set_state(Form.region)

    
@user_router.message(F.text, Form.region)
async def state_region(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_phone_number)
        await state.set_state(Form.phone_number)
    else:
        await state.update_data(region=message.text)
        await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.criminal_record)


@user_router.message(F.text, Form.criminal_record)
async def state_criminal_record(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–†–µ–≥–∏–æ–Ω, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç)', reply_markup=kb_back)
        await state.set_state(Form.region)
    else:    
        await state.update_data(criminal_record=message.text)
        if message.text == "‚ùå–ù–µ—Ç":
            await state.update_data(is_criminal_record="")
            await state.update_data(end_of_the_criminal_record="")
            await state.update_data(is_economic_criminal_record="")
            await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
            await state.set_state(Form.is_enforcement_proceedings)
        elif message.text == "‚úÖ–î–∞":
            await message.answer('–°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
            await state.set_state(Form.is_criminal_record)
        
# --------------------------------------------------------
@user_router.message(F.text, Form.is_criminal_record)
async def state_is_criminal_record(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.criminal_record)
    else:    
        await state.update_data(is_criminal_record=message.text)
        if message.text == "‚ùå–ù–µ—Ç":
            await state.update_data(end_of_the_criminal_record="")
            await state.update_data(is_economic_criminal_record="")
            await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
            await state.set_state(Form.is_enforcement_proceedings)
        elif message.text == "‚úÖ–î–∞":
            await message.answer('–í –∫–∞–∫–æ–º –≥–æ–¥—É –æ–Ω–∞ –±—ã–ª–∞ –ø–æ–≥–∞—à–µ–Ω–∞?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç)', reply_markup=kb_back)
            await state.set_state(Form.end_of_the_criminal_record)


@user_router.message(F.text, Form.end_of_the_criminal_record)
async def state_end_of_the_criminal_record(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.criminal_record)
    else:
        tmp = re.findall(r'\d+', message.text)
        if tmp:
            await state.update_data(end_of_the_criminal_record=tmp[0])
            await message.answer('–°—Ç–∞—Ç—å—è –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
            await state.set_state(Form.is_economic_criminal_record)
        else:
            await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —á–∏—Å–ª–æ–º!', reply_markup=kb_back)


@user_router.message(F.text, Form.is_economic_criminal_record)
async def state_is_economic_criminal_record(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.criminal_record)
    else:
        if message.text == "‚úÖ–î–∞" or message.text == "‚ùå–ù–µ—Ç":
            await state.update_data(is_economic_criminal_record=message.text)
            await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
            await state.set_state(Form.is_enforcement_proceedings)


@user_router.message(F.text, Form.is_enforcement_proceedings)
async def state_is_enforcement_proceedings(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.criminal_record)
    else:
        if message.text == "‚úÖ–î–∞" or message.text == "‚ùå–ù–µ—Ç":
            await state.update_data(is_enforcement_proceedings=message.text)
            await message.answer('–ö–∞–∫–∞—è —É –≤–∞—Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ (... —Ä—É–±/–º–µ—Å)?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç)', reply_markup=kb_back)
            await state.set_state(Form.salary)


@user_router.message(F.text, Form.salary)
async def state_salary(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.is_enforcement_proceedings)
    else:
        salary_arr_int = re.findall(r'\d+', message.text)
        if salary_arr_int:

            salary_int = ""
            for x in salary_arr_int:
                salary_int += x
            await state.update_data(salary=salary_int)
            await message.answer('–Ø–≤–ª—è–µ—Ç–µ—Å—å –ª–∏ –≤—ã –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –±–∞–Ω–∫–∞?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_2)
            await state.set_state(Form.is_bank_salary_employee)
        else:
            await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–Ω—É—é –ø–ª–∞—Ç—É —á–∏—Å–ª–æ–º!', reply_markup=kb_back)


@user_router.message(F.text, Form.is_bank_salary_employee)
async def state_is_bank_salary_employee(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ö–∞–∫–∞—è —É –≤–∞—Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ (... —Ä—É–±/–º–µ—Å)?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç)', reply_markup=kb_back)
        await state.set_state(Form.salary)
    else:
        if message.text == "‚úÖ–î–∞" or message.text == "‚ùå–ù–µ—Ç" or message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
            if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
                await state.update_data(is_bank_salary_employee="–ù–µ —É–∫–∞–∑–∞–Ω–æ")
            else:
                await state.update_data(is_bank_salary_employee=message.text)
            await message.answer('–°–∫–æ–ª—å–∫–æ –≤–∞–º –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç?', reply_markup=kb_back)
            await state.set_state(Form.age)


@user_router.message(F.text, Form.age)
async def state_age(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–Ø–≤–ª—è–µ—Ç–µ—Å—å –ª–∏ –≤—ã –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –±–∞–Ω–∫–∞?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_2)
        await state.set_state(Form.is_bank_salary_employee)
    else:
        tmp = re.findall(r'\d+', message.text)
        if tmp:
            await state.update_data(age=tmp[0])
            await message.answer('–†–∞–Ω–µ–µ —É–∂–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
            await state.set_state(Form.is_credit_earlier)
        else:
            await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º!', reply_markup=kb_back)


@user_router.message(F.text, Form.is_credit_earlier)
async def state_is_credit_earlier(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–°–∫–æ–ª—å–∫–æ –≤–∞–º –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç?', reply_markup=kb_back)
        await state.set_state(Form.age)
    else:
        if message.text == "‚úÖ–î–∞" or message.text == "‚ùå–ù–µ—Ç":
            await state.update_data(is_credit_earlier=message.text)
            if message.text == "‚ùå–ù–µ—Ç":
                await message.answer('–ë—ã–ª –ª–∏ –æ—Ç–∫–∞–∑ –≤ –≤—ã–¥–∞—á–µ –∫—Ä–µ–¥–∏—Ç–∞/–∏–ø–æ—Ç–µ–∫–∏?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
                await state.set_state(Form.is_credit_earlier_fail)
            if message.text == "‚úÖ–î–∞":
                await message.answer('–ö–∞–∫–æ–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å - –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π/–∏–ø–æ—Ç–µ–∫–∞?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –≤–∏–¥ —Å–ª–æ–≤–∞–º–∏, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∏–ª–∏ –∏–ø–æ—Ç–µ–∫–∞. –ú—ã –ø–æ–π–º–µ–º)', reply_markup=ReplyKeyboardRemove())
                await state.set_state(Form.credit_type)


@user_router.message(F.text, Form.is_credit_earlier_fail)
async def state_is_credit_earlier_fail(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–†–∞–Ω–µ–µ —É–∂–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.is_credit_earlier)
    else:
        if message.text == "‚úÖ–î–∞" or message.text == "‚ùå–ù–µ—Ç":
            await state.update_data(is_credit_earlier_fail=message.text)
            await message.answer('–ö–∞–∫–æ–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å - –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π/–∏–ø–æ—Ç–µ–∫–∞?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –≤–∏–¥ —Å–ª–æ–≤–∞–º–∏, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∏–ª–∏ –∏–ø–æ—Ç–µ–∫–∞. –ú—ã –ø–æ–π–º–µ–º)', reply_markup=kb_back)
            await state.set_state(Form.credit_type)


@user_router.message(F.text, Form.credit_type)
async def state_credit_type(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–†–∞–Ω–µ–µ —É–∂–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É?\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_yn)
        await state.set_state(Form.is_credit_earlier)
    else:
        await state.update_data(credit_type=message.text)
        username = message.from_user.username
        if username == "None":
            await message.answer('–ù–µ —Å–º–æ–≥–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à —Ç–µ–≥ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Å–≤—è–∑–∏. –ë–µ–∑ —ç—Ç–æ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–µ–±–µ –Ω–∏–∫–Ω–µ–π–º –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç. –ò–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç:', reply_markup=kb_back)
            await state.set_state(Form.username)
        else:
            await state.update_data(username=f'@{username}')
            data = await state.get_data()
            if data.get("phone_number") == "–ù–µ —É–∫–∞–∑–∞–Ω":
                await message.answer('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–∞–∫ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –±—ã—Å—Ç—Ä–µ–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∏ –ø–æ–º–æ–∂–µ—Ç –≤ –≤–∞—à–µ–º –≤–æ–ø—Ä–æ—Å–µ:', reply_markup=kb_phone_number)
                await state.set_state(Form.repeat_phone_number)
            else:
                mes = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –ª–∏ –≤–µ—Ä–Ω–æ:\n' + \
                        f'- –í–∞—à–µ –∏–º—è: {data.get("name")}\n' + \
                        f'- –†–µ–≥–∏–æ–Ω, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç: {data.get("region")}\n' + \
                        f'- –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å: {data.get("criminal_record")}\n'
                if data.get("criminal_record") == "‚úÖ–î–∞":
                    mes += f'- –°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞: {data.get("is_criminal_record")}\n'
                    if data.get("is_criminal_record") == "‚úÖ–î–∞":
                        mes += f'- –°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞ –≤ {data.get("end_of_the_criminal_record")}\n'       
                        mes += f'- –°—Ç–∞—Ç—å—è –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º: {data.get("is_economic_criminal_record")}\n'
                mes += f'- –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: {data.get("is_enforcement_proceedings")}\n' + \
                        f'- –í–∞—à–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {data.get("salary")} —Ä—É–±/–º–µ—Å.\n' + \
                        f'- –Ø–≤–ª—è–µ—Ç–µ—Å—å –ª–∏ –≤—ã –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –±–∞–Ω–∫–∞: {data.get("is_bank_salary_employee")}\n' + \
                        f'- –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {data.get("age")} –ª–µ—Ç\n' + \
                        f'- –†–∞–Ω—å—à–µ —É–∂–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É: {data.get("is_credit_earlier")}\n'
                if data.get("is_credit_earlier") == "‚ùå–ù–µ—Ç":
                    mes += f'- –ë—ã–ª –ª–∏ –æ—Ç–∫–∞–∑ –≤ –≤—ã–¥–∞—á–µ –∫—Ä–µ–¥–∏—Ç–∞/–∏–ø–æ—Ç–µ–∫–∏: {data.get("is_credit_earlier_fail")}\n'
                mes += f'- –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞: {data.get("credit_type")}\n' + \
                        f'- –í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º: {data.get("username")}\n' + \
                        f'- –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {data.get("phone_number")}\n' + \
                        f'(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)'
                await message.answer(mes, reply_markup=kb_check_data)
                await state.set_state(Form.check_state)


@user_router.message(F.text, Form.username)
async def state_username(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–ö–∞–∫–æ–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å - –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π/–∏–ø–æ—Ç–µ–∫–∞?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –≤–∏–¥ —Å–ª–æ–≤–∞–º–∏, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∏–ª–∏ –∏–ø–æ—Ç–µ–∫–∞. –ú—ã –ø–æ–π–º–µ–º)', reply_markup=kb_back)
        await state.set_state(Form.credit_type)
    else:
        await state.update_data(username=message.text)
        data = await state.get_data()
        if data.get("phone_number") == "–ù–µ —É–∫–∞–∑–∞–Ω":
            await message.answer('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–∞–∫ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –±—ã—Å—Ç—Ä–µ–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∏ –ø–æ–º–æ–∂–µ—Ç –≤ –≤–∞—à–µ–º –≤–æ–ø—Ä–æ—Å–µ:', reply_markup=kb_phone_number)
            await state.set_state(Form.repeat_phone_number)
        else:
            mes = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –ª–∏ –≤–µ—Ä–Ω–æ:\n' + \
                    f'- –í–∞—à–µ –∏–º—è: {data.get("name")}\n' + \
                    f'- –†–µ–≥–∏–æ–Ω, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç: {data.get("region")}\n' + \
                    f'- –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å: {data.get("criminal_record")}\n'
            if data.get("criminal_record") == "‚úÖ–î–∞":
                mes += f'- –°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞: {data.get("is_criminal_record")}\n'
                if data.get("is_criminal_record") == "‚úÖ–î–∞":
                    mes += f'- –°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞ –≤ {data.get("end_of_the_criminal_record")}\n'       
                    mes += f'- –°—Ç–∞—Ç—å—è –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º: {data.get("is_economic_criminal_record")}\n'
            mes += f'- –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: {data.get("is_enforcement_proceedings")}\n' + \
                    f'- –í–∞—à–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {data.get("salary")} —Ä—É–±/–º–µ—Å.\n' + \
                    f'- –Ø–≤–ª—è–µ—Ç–µ—Å—å –ª–∏ –≤—ã –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –±–∞–Ω–∫–∞: {data.get("is_bank_salary_employee")}\n' + \
                    f'- –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {data.get("age")} –ª–µ—Ç\n' + \
                    f'- –†–∞–Ω—å—à–µ —É–∂–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É: {data.get("is_credit_earlier")}\n'
            if data.get("is_credit_earlier") == "‚ùå–ù–µ—Ç":
                mes += f'- –ë—ã–ª –ª–∏ –æ—Ç–∫–∞–∑ –≤ –≤—ã–¥–∞—á–µ –∫—Ä–µ–¥–∏—Ç–∞/–∏–ø–æ—Ç–µ–∫–∏: {data.get("is_credit_earlier_fail")}\n'
            mes += f'- –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞: {data.get("credit_type")}\n' + \
                    f'- –í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º: {data.get("username")}\n' + \
                    f'- –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {data.get("phone_number")}\n' + \
                    f'(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)'
            await message.answer(mes, reply_markup=kb_check_data)
            await state.set_state(Form.check_state)


@user_router.message(F.text, Form.repeat_phone_number)
async def state_phone_number(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        username = message.from_user.username
        if username == "None":
            await message.answer('–ù–µ —Å–º–æ–≥–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à —Ç–µ–≥ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Å–≤—è–∑–∏. –ë–µ–∑ —ç—Ç–æ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–µ–±–µ –Ω–∏–∫–Ω–µ–π–º –∏ –ø—Ä–∏—à–ª–∏—Ç–µ –µ–≥–æ –≤ —á–∞—Ç. –ò–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç:', reply_markup=kb_back)
            await state.set_state(Form.username)
        else:
            await message.answer('–ö–∞–∫–æ–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å - –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π/–∏–ø–æ—Ç–µ–∫–∞?\n\n(–ù–∞–ø–∏—à–∏—Ç–µ –≤–∏–¥ —Å–ª–æ–≤–∞–º–∏, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∏–ª–∏ –∏–ø–æ—Ç–µ–∫–∞. –ú—ã –ø–æ–π–º–µ–º)', reply_markup=kb_back)
            await state.set_state(Form.credit_type)
    else:
        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
            await state.update_data(phone_number="–ù–µ —É–∫–∞–∑–∞–Ω")
        else:
            await state.update_data(phone_number=message.text)

        # –í—ã–≤–æ–¥ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–º—É —Å–∞–º–æ–º—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        data = await state.get_data()
        mes = f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –ª–∏ –≤–µ—Ä–Ω–æ:\n' + \
                f'- –í–∞—à–µ –∏–º—è: {data.get("name")}\n' + \
                f'- –†–µ–≥–∏–æ–Ω, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–∑—è—Ç—å –∫—Ä–µ–¥–∏—Ç: {data.get("region")}\n' + \
                f'- –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å—É–¥–∏–º–æ—Å—Ç—å: {data.get("criminal_record")}\n'
        if data.get("criminal_record") == "‚úÖ–î–∞":
            mes += f'- –°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞: {data.get("is_criminal_record")}\n'
            if data.get("is_criminal_record") == "‚úÖ–î–∞":
                mes += f'- –°—É–¥–∏–º–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞ –≤ {data.get("end_of_the_criminal_record")}\n'       
                mes += f'- –°—Ç–∞—Ç—å—è –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è–º: {data.get("is_economic_criminal_record")}\n'
        mes += f'- –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ: {data.get("is_enforcement_proceedings")}\n' + \
                f'- –í–∞—à–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {data.get("salary")} —Ä—É–±/–º–µ—Å.\n' + \
                f'- –Ø–≤–ª—è–µ—Ç–µ—Å—å –ª–∏ –≤—ã –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –±–∞–Ω–∫–∞: {data.get("is_bank_salary_employee")}\n' + \
                f'- –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {data.get("age")} –ª–µ—Ç\n' + \
                f'- –†–∞–Ω—å—à–µ —É–∂–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç/–∏–ø–æ—Ç–µ–∫—É: {data.get("is_credit_earlier")}\n'
        if data.get("is_credit_earlier") == "‚ùå–ù–µ—Ç":
            mes += f'- –ë—ã–ª –ª–∏ –æ—Ç–∫–∞–∑ –≤ –≤—ã–¥–∞—á–µ –∫—Ä–µ–¥–∏—Ç–∞/–∏–ø–æ—Ç–µ–∫–∏: {data.get("is_credit_earlier_fail")}\n'
        mes += f'- –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞: {data.get("credit_type")}\n' + \
                f'- –í–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º: {data.get("username")}\n' + \
                f'- –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {data.get("phone_number")}\n' + \
                f'(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)'
        await message.answer(mes, reply_markup=kb_check_data)
        await state.set_state(Form.check_state)


@user_router.message(F.text, Form.check_state)
async def state_check_state(message: Message, state: FSMContext):
    if message.text == "üîô–ù–∞–∑–∞–¥":
        await message.answer('–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–∞–∫ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –±—ã—Å—Ç—Ä–µ–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∏ –ø–æ–º–æ–∂–µ—Ç –≤ –≤–∞—à–µ–º –≤–æ–ø—Ä–æ—Å–µ:', reply_markup=kb_phone_number)
        await state.set_state(Form.phone_number)
    if message.text == "‚ùå–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ":
        await message.answer('–ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã —Å –Ω–∞—á–∞–ª–∞. \n\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:', reply_markup=ReplyKeyboardRemove())
        await state.set_state(Form.name)
    if message.text == "‚úÖ–í—Å–µ –≤–µ—Ä–Ω–æ":   
        user_id = message.from_user.id

        if not await Service.user.get_user_info(user_id=user_id):
            data = await state.get_data()
        else:
            data = await Service.user.get_user_info(user_id=user_id)

        # –≠—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–∑ –∞–Ω–∫–µ—Ç—ã –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –ë–î
        user_data = {
            'user_id': user_id,
            'name': data.get("name"),
            'region': data.get("region"),
            'criminal_record': data.get("criminal_record"),
            'is_criminal_record': data.get("is_criminal_record"),
            'end_of_the_criminal_record': data.get("end_of_the_criminal_record"),
            'is_economic_criminal_record': data.get("is_economic_criminal_record"),
            'is_enforcement_proceedings': data.get("is_enforcement_proceedings"),
            'salary': data.get("salary"),
            'is_bank_salary_employee': data.get("is_bank_salary_employee"),
            'age': data.get("age"),
            'is_credit_earlier': data.get("is_credit_earlier"),
            'is_credit_earlier_fail': data.get("is_credit_earlier_fail"),
            'credit_type': data.get("credit_type"),
            'username': data.get("username"),
            'phone_number': data.get("phone_number"),
            'completed': False,
            'number_completed': 0,
            'number_changes': 0,
            'date_last_change': datetime.now().date(),
        }

        if (data.get("criminal_record") == "‚ùå–ù–µ—Ç" and data.get("is_enforcement_proceedings") == "‚ùå–ù–µ—Ç" and int(data.get("salary")) > 85000 and 25 < int(data.get("age")) < 45):
            mes = '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã! –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å–∫–æ—Ä–∏–Ω–≥–æ–≤—ã–º –º–æ–¥–µ–ª—è–º –±–∞–Ω–∫–∞:\n' + \
                  '- –ù–µ—Ç —Å—É–¥–∏–º–æ—Å—Ç–∏\n' + \
                  '- –ù–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n' + \
                  '- –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ –º–æ–∂–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ\n'
            if data.get("is_bank_salary_employee") == "‚úÖ–î–∞":
                mes += f'- –Ø–≤–ª—è–µ—Ç–µ—Å—å –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –±–∞–Ω–∫–∞\n'
            mes += '- –ü–æ–ø–∞–¥–∞–µ—Ç–µ –≤ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–µ–Ω—å—à–µ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É –¥–µ—Ñ–æ–ª—Ç–Ω–æ—Å—Ç–∏\n' + \
                   '–ê –∑–Ω–∞—á–∏—Ç - –µ—Å—Ç—å —à–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –æ–¥–æ–±—Ä–µ–Ω–∏–µ.\n\n' + \
                   '–û–¥–Ω–∞–∫–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —ç—Ç–æ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ\n\n' + \
                   '–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. (–ó–≤–æ–Ω–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π).\n\n' + \
                  f'–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: {data.get("phone_number")}\n–¢–µ–ª–µ–≥—Ä–∞–º: {data.get("username")}\n\n' + \
                   '–ò, –ø—Ä–∏ –≤–∞—à–µ–º —Å–æ–≥–ª–∞—Å–∏–∏, –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ–¥–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É. –ê —Ç–∞–∫ –∂–µ, –ü–û–õ–ù–´–ô —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑.\n(–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ 2000 —Ä—É–±., –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ 25 –º–∏–Ω—É—Ç)'
            await message.answer(mes, reply_markup=ReplyKeyboardRemove()) 
            
            user_data['important_user'] = True
            await Service.user.create_or_update_user(user_data=user_data)
            await start_mailing_to_managers(message)

        else:
            mes = '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã! –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —Å–∫–æ—Ä–∏–Ω–≥–æ–≤—ã–º –º–æ–¥–µ–ª—è–º –±–∞–Ω–∫–∞:\n'
            if data.get("criminal_record") == "‚ùå–ù–µ—Ç":
                mes += '- –ù–µ—Ç —Å—É–¥–∏–º–æ—Å—Ç–∏\n'
            if data.get("is_enforcement_proceedings") == "‚ùå–ù–µ—Ç":
                mes += '- –ù–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n'
            if int(data.get("salary")) > 85000:
                mes += '- –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ –º–æ–∂–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ\n'
            if data.get("is_bank_salary_employee") == "‚úÖ–î–∞":
                mes += '- –Ø–≤–ª—è–µ—Ç–µ—Å—å –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –±–∞–Ω–∫–∞\n'
            if 25 < int(data.get("age")) < 45:
                mes += '- –ü–æ–ø–∞–¥–∞–µ—Ç–µ –≤ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–µ–Ω—å—à–µ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É –¥–µ—Ñ–æ–ª—Ç–Ω–æ—Å—Ç–∏\n'

            mes += '–ù–æ —É –≤–∞—Å:\n'
            if not 25 < int(data.get("age")) < 45:
                mes += '- –ù–µ –ø–æ–ø–∞–¥–∞–µ—Ç–µ –≤ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–µ–Ω—å—à–µ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É –¥–µ—Ñ–æ–ª—Ç–Ω–æ—Å—Ç–∏\n'
            if data.get("is_criminal_record") == "‚úÖ–î–∞":
                mes += '- –ï—Å—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∞—è —Å—É–¥–∏–º–æ—Å—Ç—å\n'
            if data.get("is_enforcement_proceedings") == "‚úÖ–î–∞":
                mes += '- –ï—Å—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ\n'

            if data.get("is_criminal_record") == "‚ùå–ù–µ—Ç":
                if data.get("is_economic_criminal_record") == "‚úÖ–î–∞":
                    mes += '- –ë—ã–ª–∞ —Å—É–¥–∏–º–æ—Å—Ç—å –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º —Å—Ç–∞—Ç—å—è–º\n'
                else:
                    if int(datetime.now().year) - int(data.get("end_of_the_criminal_record")) <= 5:
                        mes += '- –ï—Å—Ç—å –Ω–µ–¥–∞–≤–Ω–æ –ø–æ–≥–∞—à–µ–Ω–Ω–∞—è —Å—É–¥–∏–º–æ—Å—Ç—å - –ø–æ—ç—Ç–æ–º—É —Å–∫–æ—Ä–∏–Ω–≥–æ–≤—ã–π —É –≤–∞—Å –±–∞–ª–ª –±—É–¥–µ—Ç –Ω–∏–∑–∫–∏–º\n'
                    if int(datetime.now().year) - int(data.get("end_of_the_criminal_record")) > 5:
                        mes += f'- –ï—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–Ω–∞—è —Å—É–¥–∏–º–æ—Å—Ç—å {int(datetime.now().year) - int(data.get("end_of_the_criminal_record"))} –ª–µ—Ç –Ω–∞–∑–∞–¥, –µ—Å–ª–∏ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –≤—ã –Ω–µ –±—Ä–∞–ª–∏ –∫—Ä–µ–¥–∏—Ç—ã - —Å–∫–æ—Ä–∏–Ω–≥–æ–≤—ã–π –±–∞–ª–ª –±—É–¥–µ—Ç –Ω–∏–∑–∫–∏–º\n'
            
            if int(data.get("salary")) <= 85000:
                mes += '- –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ –º–æ–∂–µ—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ\n'
            if data.get("is_bank_salary_employee") == "‚ùå–ù–µ—Ç" or data.get("is_bank_salary_employee") == "–ù–µ —É–∫–∞–∑–∞–Ω–æ":
                mes += '- –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∑–∞—Ä–ø–ª–∞—Ç–Ω–∏–∫–æ–º –±–∞–Ω–∫–∞\n'
            if int(data.get("salary")) < 25 and int(data.get("salary")) > 45:
                mes += '- –í—ã –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç–µ –≤ –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–µ–Ω—å—à–µ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É –¥–µ—Ñ–æ–ª—Ç–Ω–æ—Å—Ç–∏\n'
            
            mes += '–ê –∑–Ω–∞—á–∏—Ç, –µ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Ç–∫–∞–∑–∞ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏.\n\n' + \
                   '–û–¥–Ω–∞–∫–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —ç—Ç–æ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ.\n\n' + \
                   '–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. (–ó–≤–æ–Ω–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π).\n\n' + \
                  f'–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏: {data.get("phone_number")}\n–¢–µ–ª–µ–≥—Ä–∞–º: {data.get("username")}\n\n' + \
                   '–ò, –ø—Ä–∏ –≤–∞—à–µ–º —Å–æ–≥–ª–∞—Å–∏–∏, –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≤–µ–¥–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É. –ê —Ç–∞–∫ –∂–µ, –ü–û–õ–ù–´–ô —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑.\n(–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ 2000 —Ä—É–±., –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ 25 –º–∏–Ω—É—Ç)'
            await message.answer(mes, reply_markup=ReplyKeyboardRemove())
            
            user_data['important_user'] = False

            await Service.user.create_or_update_user(user_data=user_data)

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Ü–µ–Ω–∫–µ –±–æ—Ç–∞
        await message.answer('–û—Ü–µ–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_3)
        await state.set_state(Form.mark)
    

@user_router.message(F.text, Form.mark)
async def state_mark(message: Message, state: FSMContext):
    if message.text == "–ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å" or message.text == "–ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å":
        await state.update_data(mark=message.text)
        await message.answer('–ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ - –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (—á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ —Ä–∞–±–æ—Ç–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞):\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_4)
        await state.set_state(Form.is_feedback)


@user_router.message(F.text, Form.is_feedback)
async def state_is_feedback(message: Message, state: FSMContext):
    if message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤" or message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(is_feedback=message.text)
        if message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤":
            await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:', reply_markup=ReplyKeyboardRemove())
            await state.set_state(Form.feedback) 
        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":   
            await state.update_data(feedback="–ù–µ —É–∫–∞–∑–∞–Ω")
            data = await state.get_data()

            user_id = message.from_user.id
            mark = data.get("mark")
            feedback = data.get("feedback")

            await Service.user.save_feedback(user_id=user_id, mark=mark, feedback_text=feedback)

            await message.answer('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º!\n–£—Å–ø–µ—Ö–æ–≤ –≤ –æ–¥–æ–±—Ä–µ–Ω–∏–∏!', reply_markup=ReplyKeyboardRemove())
            await message.answer('–ù–æ —ç—Ç–æ –µ—â–µ –Ω–µ –≤—Å–µ, –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!', reply_markup=ReplyKeyboardRemove())
            await state.set_state(Form.approval)


@user_router.message(F.text, Form.feedback)
async def state_feedback(message: Message, state: FSMContext):
    await state.update_data(feedback=message.text)
    data = await state.get_data()
    
    user_id = message.from_user.id
    mark = data.get("mark")
    feedback = data.get("feedback")

    await Service.user.save_feedback(user_id=user_id, mark=mark, feedback_text=feedback)
    
    await message.answer('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º!\n–£—Å–ø–µ—Ö–æ–≤ –≤ –æ–¥–æ–±—Ä–µ–Ω–∏–∏!', reply_markup=ReplyKeyboardRemove())
    await message.answer('–ù–æ —ç—Ç–æ –µ—â–µ –Ω–µ –≤—Å–µ, –æ–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!', reply_markup=ReplyKeyboardRemove())
    await state.set_state(Form.approval)


@user_router.message(F.text, Form.approval)
async def state_approval(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if message.text == '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è':
        await state.update_data(approval='–°–æ–≥–ª–∞—Å–µ–Ω')
        await message.answer('–ù–∏–∂–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω qr-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã:', reply_markup=ReplyKeyboardRemove())
        await message.answer_photo(photo=FSInputFile(r"static\qr.png"),)
        await message.answer('–ù–∏–∂–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Ñ–∞–π–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ, –æ—Ç–∫—Ä–æ–π—Ç–µ —É —Å–µ–±—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º—É.\n\n(–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç: https://credistory.ru/)', reply_markup=ReplyKeyboardRemove())
        await message.answer_document(document=FSInputFile(r"static\Proverka_kredita.pdf"),)
        await Service.user.save_approval(user_id=user_id, approval=approval)

        await message.answer('–ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤ –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –∏–º–µ—é—â–∏–π—Å—è, –ø—Ä–æ—Å–∏–º –≤–∞—Å —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å. –ñ–¥–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!\n\n(–ù–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é)', reply_markup=kb_4)
        await state.set_state(Form.repeat_is_feedback)
    if message.text == '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è': 
        await state.update_data(approval='–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω')
        await message.answer('–ë–µ–∑ –≤–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è –¥–∞–ª—å–Ω–µ–π—à—è—è —Ä–∞–±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è–º–∏', reply_markup=kb_approval)
        await Service.user.save_approval(user_id=user_id, approval=approval)
        await state.set_state(Form.approval)


@user_router.message(F.text, Form.repeat_is_feedback)
async def state_repeat_is_feedback(message: Message, state: FSMContext):
    if message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤" or message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(repeat_is_feedback=message.text)
        if message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤":
            await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:', reply_markup=ReplyKeyboardRemove())
            await state.set_state(Form.repeat_feedback)
        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
            await state.update_data(repeat_feedback="–ù–µ —É–∫–∞–∑–∞–Ω")

            user_id = message.from_user.id
            repeat_feedback = "–ù–µ —É–∫–∞–∑–∞–Ω"

            await Service.user.save_repeat_feedback(user_id=user_id, repeat_feedback_text=repeat_feedback)

            await message.answer('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º!', reply_markup=ReplyKeyboardRemove())

            await state.clear()
            await state.set_state(Form.approval)


@user_router.message(F.text, Form.repeat_feedback)
async def state_repeat_feedback(message: Message, state: FSMContext):
    await state.update_data(feedback=message.text)
    data = await state.get_data()

    user_id = message.from_user.id
    repeat_feedback = data.get("repeat_feedback")

    await Service.user.save_repeat_feedback(user_id=user_id, repeat_feedback_text=repeat_feedback)

    await message.answer('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º!', reply_markup=ReplyKeyboardRemove())
    await state.clear()



